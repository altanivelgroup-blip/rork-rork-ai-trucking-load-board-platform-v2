rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() { return request.auth != null; }
    function isOwnerCreate() {
      return signedIn() && (
        request.resource.data.createdBy == request.auth.uid ||
        request.resource.data.userId == request.auth.uid
      );
    }
    function isOwnerExisting() {
      return signedIn() && (
        resource.data.createdBy == request.auth.uid ||
        resource.data.userId == request.auth.uid
      );
    }

    match /loads/{id} {
      allow create: if isOwnerCreate();
      allow read: if true; // switch to: if isOwnerExisting();  (later if needed)
      allow update, delete: if isOwnerExisting();
    }

    match /users/{userId} {
      allow read, write, create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /drivers/{userId} {
      allow read, write, create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /notificationSettings/{userId} {
      allow read, write, create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /driverProfiles/{userId} {
      allow read, write, create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /vehicles/{id} {
      allow create: if isOwnerCreate();
      allow read: if true; // Public read for now, can be restricted later
      allow update, delete: if isOwnerExisting();
    }

    match /drivers/{driverId}/vehicles/{vehicleId} {
      function signedIn() { return request.auth != null; }
      allow read: if signedIn() && request.auth.uid == driverId;
      allow create: if signedIn()
        && request.auth.uid == driverId
        && request.resource.data.createdBy == request.auth.uid;
      allow update, delete: if signedIn()
        && request.auth.uid == driverId
        && resource.data.createdBy == request.auth.uid;
    }
  }
}