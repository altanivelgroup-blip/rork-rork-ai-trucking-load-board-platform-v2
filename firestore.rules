rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function notChangingArchive(before, after) {
      return before == null ||
        (before.isArchived == after.isArchived &&
         before.archivedAt == after.archivedAt);
    }

    // Each user can read/write only their own profile
    match /profiles/{uid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    // Loads: allow authenticated users (including anonymous) to read and write
    // Block client updates that flip archival fields; only server cron can do it
    match /loads/{docId} {
      allow read: if true; // Anyone can read loads
      allow create: if request.auth != null;
      allow update: if request.auth != null && notChangingArchive(resource.data, request.resource.data);
      allow delete: if request.auth != null;
    }

    // Vehicles: align with loads for now (auth users can read/write)
    match /vehicles/{docId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
    }

    // Public cache for carrier snapshots
    match /carrierPublic/{dot} {
      allow read: if true;
      allow write: if false;
    }
  }
}