// CROSS-PLATFORM LOAD SHARING: Universal Firestore rules for maximum compatibility
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function notChangingArchive(before, after) {
      return before == null ||
        (before.isArchived == after.isArchived &&
         before.archivedAt == after.archivedAt);
    }

    function isAdmin() {
      return request.auth != null && (
        request.auth.token.role == 'admin' ||
        request.auth.token.email == 'admin@loadrush.com' ||
        request.auth.token.admin == true
      );
    }
    
    function isAuthenticatedUser() {
      return request.auth != null && request.auth.uid != null;
    }
    
    function isValidUser() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticatedUser() && request.auth.uid == userId;
    }
    
    function allowAll() {
      return true; // Maximum permissive for cross-platform compatibility
    }

    // ✅ CROSS-PLATFORM: User profiles with maximum access
    match /profiles/{uid} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }
    
    match /drivers/{uid} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }
    
    match /shippers/{uid} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }
    
    match /users/{uid} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
      
      match /logins/{loginId} {
        allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
      }
      
      match /settings/{settingId} {
        allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
      }
    }

    // ✅ CROSS-PLATFORM: Loads collection with maximum universal access
    match /loads/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    // ✅ CROSS-PLATFORM: Bulk import session metadata with maximum access
    match /bulkImports/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    // ✅ CROSS-PLATFORM: Board and history collections with maximum access
    match /board/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    match /boards/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    match /history/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    match /posts/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    match /myLoads/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    // ✅ CROSS-PLATFORM: Vehicle management with maximum access
    match /vehicles/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    // ✅ CROSS-PLATFORM: Carrier public data (read-only)
    match /carrierPublic/{dot} {
      allow read: if true;
      allow write: if false;
    }

    // ✅ CROSS-PLATFORM: Notification settings with maximum access
    match /notificationSettings/{uid} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }
    
    match /users/{userId}/settings/notifications {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    // ✅ CROSS-PLATFORM: Reports and analytics with maximum access
    match /reports/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    match /reportAnalytics/{docId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    // ✅ CROSS-PLATFORM: Photo management with maximum access
    match /photos/{photoId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }
    
    match /loadPhotos/{userId}/{loadId}/metadata/{photoId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    // ✅ CROSS-PLATFORM: Transaction management with maximum access
    match /transactions/{transactionId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    match /adminTransactions/{transactionId} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access
    }

    // ✅ CROSS-PLATFORM: Universal catch-all rule for maximum compatibility
    match /{document=**} {
      allow read, write, create, update, delete: if allowAll(); // Maximum permissive access for all operations
    }
  }
}