// Rules updated - Anonymous paths added for unauthorized error handling
// Backup created: storage.rules.backup.anonymous-paths
// Log: Rules updated
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isAdmin() {
      return request.auth != null
        && (request.auth.token.admin == true || request.auth.token.role == 'admin');
    }

    // Updated rule: allow owner access or admin access
    match /loadPhotos/{userId}/{loadId}/{file=**} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || request.auth.token.admin == true);
    }

    // Anonymous path for temporary uploads - allow authenticated anonymous users
    match /loadPhotos/anonymous/{loadId}/{file=**} {
      allow read, write: if request.auth != null;
    }
    
    // Fallback path for any authenticated user (including anonymous)
    match /loadPhotos/{path=**} {
      allow read: if request.auth != null;
    }

    // Keep vehicle photos consistent
    match /vehiclePhotos/{userId}/{vehicleId}/{file=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Admin-only report files
    match /reports/{allPaths=**} { allow read, write: if isAdmin(); }
    match /reportAnalytics/{allPaths=**} { allow read, write: if isAdmin(); }
  }
}