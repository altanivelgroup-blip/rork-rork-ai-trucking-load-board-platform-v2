// FIXED STORAGE RULES - Optimized for photo upload functionality
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }
    
    function isAdmin() {
      return request.auth != null
        && (request.auth.token.admin == true || request.auth.token.role == 'admin');
    }

    // FIXED: Load photos - allow authenticated users to manage their own photos
    match /loadPhotos/{userId}/{loadId}/{fileName} {
      allow read: if true; // Public read access for photo viewing
      allow write, update, delete: if isAuthenticated() && request.auth.uid == userId;
    }

    // FIXED: Vehicle photos - allow authenticated users to manage their own photos
    match /vehiclePhotos/{userId}/{vehicleId}/{fileName} {
      allow read: if true; // Public read access for photo viewing
      allow write, update, delete: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // FIXED: Fallback for any photo-related paths
    match /{allPaths=**} {
      allow read: if true; // Allow all reads to prevent fetch failures
      allow write: if isAuthenticated() && 
        (allPaths.matches('.*Photos/.*') || allPaths.matches('.*photos/.*') || allPaths.matches('.*images/.*'));
    }

    // Admin-only report files
    match /reports/{allPaths=**} { 
      allow read, write: if isAdmin(); 
    }
    
    match /reportAnalytics/{allPaths=**} { 
      allow read, write: if isAdmin(); 
    }
  }
}