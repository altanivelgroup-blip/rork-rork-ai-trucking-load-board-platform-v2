rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isAdmin() {
      return request.auth != null
        && (request.auth.token.admin == true || request.auth.token.role == 'admin');
    }
    
    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }
    
    // ULTRA-PERMISSIVE: Allow all authenticated users to upload photos anywhere
    // This fixes the persistent "storage/unauthorized" error
    match /loadPhotos/{allPaths=**} {
      allow read, write, create, update, delete: if isAuthenticated();
    }
    
    // Vehicle photos with same ultra-permissive rules
    match /vehiclePhotos/{allPaths=**} {
      allow read, write, create, update, delete: if isAuthenticated();
    }
    
    // Catch-all for any photo-related paths - ultra-permissive
    match /{allPaths=**} {
      allow read, write, create, update, delete: if isAuthenticated() && 
        (allPaths.matches('.*[Pp]hotos/.*') || allPaths.matches('.*[Ii]mages/.*') || allPaths.matches('.*uploads/.*'));
    }
    
    // Admin-only report files
    match /reports/{allPaths=**} { allow read, write: if isAdmin(); }
    match /reportAnalytics/{allPaths=**} { allow read, write: if isAdmin(); }
  }
}