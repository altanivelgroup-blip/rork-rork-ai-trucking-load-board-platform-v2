rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }
    
    function isAdmin() {
      return request.auth != null
        && (request.auth.token.admin == true || request.auth.token.role == 'admin');
    }
    
    match /loads/{userId}/{loadId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }
    
    match /loads/{loadId}/{role}/{userId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }
    
    match /profiles/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    match /drivers/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    match /loadPhotos/{userId}/{loadId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    match /vehiclePhotos/{userId}/{vehicleId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    match /reports/{allPaths=**} {
      allow read, write: if isAdmin();
    }
    
    match /reportAnalytics/{allPaths=**} {
      allow read, write: if isAdmin();
    }
    
    match /{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated() && 
        (allPaths.matches('.*Photos/.*') || allPaths.matches('.*photos/.*') || allPaths.matches('.*images/.*'));
    }
  }
}
